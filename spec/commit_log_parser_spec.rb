require 'spec_helper'
require 'tddium/commit_log_parser'
require 'msgpack'

describe CommitLogParser do
  let(:commit_log) {
    # generated by `git log --pretty='%H%n%s%n%aN%n%aE%n%at%n%cN%n%cE%n%ct%n' HEAD^..HEAD`
    """15e8cbd88d68d210953d51c28e26c6b9944a313b
      ignore .ruby-version for rvm
      Bob Smith
      bob@example.com
      1367556311
      Fred Smith
      fred@example.com
      1367556311
    """
  }

  subject { CommitLogParser.new(commit_log) }

  describe "#commit_log" do
    it "should be an accessor" do
      subject.commit_log = "commit_log"
      subject.commit_log.should == "commit_log"
    end
  end

  describe "#commits" do
    it "should return a commit list from the commit log" do
      commit = subject.commits[0]
      commit["id"].should == "15e8cbd88d68d210953d51c28e26c6b9944a313b"
      commit["summary"].should == "ignore .ruby-version for rvm"
      commit["author"]["name"].should == "Bob Smith"
      commit["author"]["email"].should == "bob@example.com"
      commit["committer"]["name"].should == "Fred Smith"
      commit["committer"]["email"].should == "fred@example.com"
      commit["date"].should == 1367556311
    end

    it "should be msgpackable" do
      expect { MessagePack.pack(subject.commits) }.not_to raise_error
    end
  end
end
